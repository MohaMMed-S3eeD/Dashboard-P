<!DOCTYPE html>
<html lang="en" dir="ltr">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Production Dashboard - Express </title>
    <meta name="robots" content="noindex" />
    <style>
      :root {
        --bg-1: #f7faff;
        --bg-2: #eef6ff;
        --card: #ffffff;
        --text: #0f172a;
        --muted: #475569;
        --primary: #6366f1;
        --accent: #14b8a6;
        --ring: rgba(99, 102, 241, 0.18);
        --shadow: rgba(2, 6, 23, 0.08);
      }
      * {
        box-sizing: border-box;
      }
      body {
        font-family: system-ui, -apple-system, Segoe UI, Roboto, Arial,
          sans-serif;
        margin: 0;
        color: var(--text);
        background: linear-gradient(135deg, var(--bg-1), var(--bg-2));
        min-height: 100vh;
        display: grid;
        place-items: center;
        padding: 24px;
      }
      .container {
        width: 100%;
        max-width: 920px;
      }
      .card {
        background: var(--card);
        border: 1px solid #e5e7eb;
        border-radius: 14px;
        padding: 28px 28px;
        box-shadow: 0 12px 28px var(--shadow);
      }
      .header {
        display: grid;
        gap: 6px;
        text-align: center;
        margin-bottom: 14px;
      }
      .title {
        margin: 0;
        font-size: 28px;
        letter-spacing: 0.2px;
      }
      .subtitle {
        margin: 0;
        color: var(--muted);
        font-size: 14px;
      }

      .grid {
        display: grid;
        gap: 14px;
        grid-template-columns: repeat(auto-fit, minmax(220px, 1fr));
        margin-top: 18px;
      }
      .link {
        display: inline-flex;
        align-items: center;
        justify-content: center;
        gap: 10px;
        background: #f8fafc;
        border: 1px solid #e5e7eb;
        color: #0f172a;
        border-radius: 10px;
        padding: 12px 14px;
        text-decoration: none;
        font-weight: 600;
        transition: transform 0.12s ease, box-shadow 0.12s ease,
          border-color 0.12s ease;
      }
      .link:hover {
        transform: translateY(-1px);
        box-shadow: 0 8px 18px var(--shadow);
        border-color: #d1d5db;
      }
      .link.primary {
        background: #eef2ff;
        color: #3730a3;
        border-color: #c7d2fe;
      }
      .link.accent {
        background: #ecfeff;
        color: #0f766e;
        border-color: #a7f3d0;
      }

      .section {
        margin-top: 18px;
        padding-top: 18px;
        border-top: 1px dashed #e5e7eb;
      }
      .kpis {
        display: grid;
        gap: 12px;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
      }
      .kpi {
        background: #f8fafc;
        border: 1px solid #e5e7eb;
        border-radius: 10px;
        padding: 14px;
      }
      .kpi h3 {
        margin: 0 0 6px;
        font-size: 14px;
        color: var(--muted);
        font-weight: 600;
      }
      .kpi p {
        margin: 0;
        font-size: 16px;
        font-weight: 700;
      }

      footer {
        text-align: center;
        margin-top: 18px;
        color: var(--muted);
        font-size: 12px;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <main class="card">
        <header class="header">
          <h1 class="title">Welcome to the Production Dashboard for Express</h1>
        </header>

        <section class="grid" aria-label="API Endpoints">
          <a
            class="link primary"
            href="/api/health"
            target="_blank"
            rel="noopener"
            >Health Check · /api/health</a
          >
          <a class="link" href="/api/users" target="_blank" rel="noopener"
            >Users List · /api/users</a
          >
          <a
            class="link accent"
            href="/api/users/1"
            target="_blank"
            rel="noopener"
            >Sample User · /api/users/1</a
          >
        </section>

        <section class="section" aria-live="polite" aria-busy="false">
          <div class="kpis">
            <div class="kpi">
              <h3>Server Status</h3>
              <p id="health-status">—</p>
            </div>
            <div class="kpi">
              <h3>Uptime</h3>
              <p id="health-uptime">—</p>
            </div>
            <div class="kpi">
              <h3>Current Time</h3>
              <p id="now">—</p>
            </div>
          </div>
        </section>
      </main>
    </div>

    <script>
      const $ = (sel) => document.querySelector(sel);
      function formatSeconds(s) {
        if (!Number.isFinite(s)) return "—";
        const h = Math.floor(s / 3600);
        const m = Math.floor((s % 3600) / 60);
        const sec = Math.floor(s % 60);
        const parts = [];
        if (h) parts.push(h + "h");
        if (m) parts.push(m + "m");
        parts.push(sec + "s");
        return parts.join(" ");
      }
      async function loadHealth() {
        try {
          const res = await fetch("/api/health");
          const data = await res.json();
          $("#health-status").textContent = data.status || "—";
          $("#health-uptime").textContent = formatSeconds(data.uptime);
        } catch (e) {
          $("#health-status").textContent = "Failed to fetch";
          $("#health-uptime").textContent = "—";
        }
      }
      function tickClock() {
        const now = new Date();
        const fmt = new Intl.DateTimeFormat("en", {
          dateStyle: "medium",
          timeStyle: "medium",
        }).format(now);
        $("#now").textContent = fmt;
      }
      document.addEventListener("DOMContentLoaded", () => {
        tickClock();
        setInterval(tickClock, 1000);
        loadHealth();
        setInterval(loadHealth, 10000);
      });
    </script>
  </body>
</html>
